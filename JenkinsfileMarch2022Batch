def sendSlackNotifications(String buildStatus = 'STARTED'){
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


node{

    echo "Job Name is:  ${env.JOB_NAME}"
    echo "Node Name is: ${env.NODE_NAME}"
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('    *')])])
  
  


def mavenHome = tool name: 'maven3.8.5'

try{

sendSlackNotifications("STARTED")
//Get the code from Github Repo
stage('CheckoutCode'){

git branch: 'development', credentialsId: 'da17bc5a-141d-4f1e-a709-b311ad6513ff', url: 'https://github.com/vinod264/maven-web-application.git'
}
//Do the build by using Maven Build tool
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*


//Execute the sonarQube Report
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//Upload Artifacts into Artifactory Repo
stage('UploadArtifactsintoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

//Deploy Application into Tomcat Server
stage('DeployApplicationTomcatServer'){
sshagent(['6f8d8b07-9861-4bcf-990a-3528e0226771']) {
  sh "scp -o StrictHostkeyChecking=no target/maven-web-application.war ec2-user@13.233.0.92:/opt/apache-tomcat-9.0.62/webapps"
}

}
*/
}//Try Closing
    catch(e){
    currentBuild.result = "FAILED"
    }
    finally{
    
    sendSlackNotifications(currentBuild.result)
   }
   }//Node Closing
